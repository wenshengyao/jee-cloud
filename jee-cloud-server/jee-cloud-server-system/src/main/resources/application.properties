# 应用名称
spring.application.name=jee-cloud-server-system
# 应用服务 WEB 访问端口
server.port=8981

#值大于或等于0时，容器启动时就加载dispatchservlet
spring.mvc.servlet.load-on-startup=1

# Nacos认证信息
spring.cloud.nacos.discovery.username=nacos
spring.cloud.nacos.discovery.password=nacos
# Nacos 服务发现与注册配置，其中子属性 server-addr 指定 Nacos 服务器主机和端口
spring.cloud.nacos.discovery.server-addr=192.168.23.130:8848
# 注册到 nacos 的指定 namespace，默认为 public
spring.cloud.nacos.discovery.namespace=public
#指定nacos注册的服务ip前缀，不然会使用内网ip，无法访问
spring.cloud.inetutils.preferred-networks=192.168.23.130

# dubbo 协议
#dubbo.protocol.id=dubbo
#dubbo.protocol.name=dubbo
## dubbo 协议端口（ -1 表示自增端口，从 20880 开始）
#dubbo.protocol.port=-1
## Dubbo 消费端订阅服务端的应用名，多个服务提供者用逗号分隔
## 这里订阅"自己"，会被忽略掉，请根据实际情况添加
#dubbo.cloud.subscribed-services=jee-cloud-server-system
## dubbo 服务扫描基准包
#dubbo.scan.base-packages=xyz.cloud.pms.server.system
#dubbo.registry.address=nacos://192.168.23.130:8848
#dubbo.application.id=jee-cloud-server-system
#dubbo.application.name=jee-cloud-server-system
#dubbo.application.qos-enable=false
#dubbo.application.qos-accept-foreign-ip=false

#数据库配置
spring.main.allow-bean-definition-overriding=true
spring.datasource.druid.db-type=com.alibaba.druid.pool.DruidDataSource
# 数据库驱动：
spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver
# 数据源名称
spring.datasource.druid.name=defaultDataSource
# 数据库连接地址
spring.datasource.druid.url=jdbc:mysql://192.168.23.130:3306/jee-server-system?serverTimezone=Asia/Shanghai&userSSL=false
# 数据库用户名&密码：
spring.datasource.druid.username=root
spring.datasource.druid.password=root
#druid 数据源专有配置
# 初始化时建立物理连接的个数
spring.datasource.druid.initial-size=5
#最小连接池数量
spring.datasource.druid.min-idle=5
#最大连接池数量
spring.datasource.druid.max-active=20
#获取连接时最大等待时间
spring.datasource.druid.max-wait=60000
#Destory线程检测连接的间隔时间
spring.datasource.druid.time-between-eviction-runs-millis=60000
#连接保持空闲而不被驱逐的最长时间
spring.datasource.druid.min-evictable-idle-time-millis=300000
#检测连接是否有效的sql
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
spring.datasource.druid.test-while-idle=true
#申请连接时执行validationQuery检测连接是否有效
spring.datasource.druid.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效
spring.datasource.druid.testOnReturn=false
#是否缓存preparedStatements
spring.datasource.druid.pool-prepared-statements=true

#mybatis扫描xml
mybatis.mapper-locations=classpath:**/*.xml
#mybatis 输出sql
logging.level.xyz.jee.server.system.dao=debug

#日志级别
logging.level.root=info

#jackson 日期格式
#spring.jackson.date.format=yyyy-MM-dd HH:mm:ss

#redis数据库默认使用db0
spring.redis.database=3
spring.redis.password=
spring.redis.port=6379
spring.redis.host=192.168.23.130
#spring.redis.host=172.29.9.158
spring.redis.host-name=redis
# 连接超时时间
spring.redis.timeout=5000
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.lettuce.pool.max-active=8
# 连接池中的最小空闲连接
spring.redis.lettuce.pool.min-idle=2
# 连接池中的最大空闲连接
spring.redis.lettuce.pool.max-idle=4
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.lettuce.pool.max-wait=-1
#在关闭客户端连接之前等待任务处理完成的最长时间，在这之后，无论任务是否执行完成，都会被执行器关闭，默认100ms
spring.redis.lettuce.shutdown-timeout=100
#是否缓存空值
spring.cache.redis.cache-null-values=false
